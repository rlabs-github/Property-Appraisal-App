name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          docker-compose -f docker-compose.test.yml up --exit-code-from app

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Configure Docker to use gcloud credentials
        run: gcloud auth configure-docker gcr.io

      - name: Determine branch and set environment
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "TAG=prod" >> $GITHUB_ENV
            echo "ENV=production" >> $GITHUB_ENV
          else
            echo "TAG=staging" >> $GITHUB_ENV
            echo "ENV=staging" >> $GITHUB_ENV
          fi

      - name: Build and push Backend Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-backend:${{ env.TAG }} \
            -f docker/backend/backend.dockerfile.${{ env.TAG }} ./backend
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-backend:${{ env.TAG }}

      - name: Build and push Frontend Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-frontend:${{ env.TAG }} \
            -f docker/frontend/frontend.dockerfile.${{ env.TAG }} ./frontend
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-frontend:${{ env.TAG }}

      - name: Run Database Migrations
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            DB_URL=${{ secrets.DATABASE_URL_PROD }}
          else
            DB_URL=${{ secrets.DATABASE_URL_STAGING }}
          fi
          
          docker run --rm \
            --env DATABASE_URL=$DB_URL \
            gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-backend:${{ env.TAG }} \
            npm run migrations:run

      - name: Deploy to Cloud Run
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            # Deploy backend production
            gcloud run deploy property-backend-prod \
              --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-backend:${{ env.TAG }} \
              --region us-central1 \
              --platform managed \
              --set-env-vars ENV=${{ env.ENV }},DATABASE_URL=${{ secrets.DATABASE_URL_PROD }}
              
            # Deploy frontend production
            gcloud run deploy property-frontend-prod \
              --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-frontend:${{ env.TAG }} \
              --region us-central1 \
              --platform managed \
              --set-env-vars ENV=${{ env.ENV }},API_URL=https://property-backend-prod-${{ secrets.GCP_PROJECT_ID }}.run.app
          else
            # Deploy backend staging
            gcloud run deploy property-backend-staging \
              --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-backend:${{ env.TAG }} \
              --region us-central1 \
              --platform managed \
              --set-env-vars ENV=${{ env.ENV }},DATABASE_URL=${{ secrets.DATABASE_URL_STAGING }}
              
            # Deploy frontend staging
            gcloud run deploy property-frontend-staging \
              --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/property-appraisal-frontend:${{ env.TAG }} \
              --region us-central1 \
              --platform managed \
              --set-env-vars ENV=${{ env.ENV }},API_URL=https://property-backend-staging-${{ secrets.GCP_PROJECT_ID }}.run.app
          fi